# Use a Windows base image with Python installed, or install Python in the Dockerfile
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Install Chocolatey and Python
SHELL ["powershell", "-Command"]

# Install Chocolatey
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Install Python 3.9 and OpenSSL
RUN choco install -y python --version=3.9.7
RUN choco install -y openssl

# Note: xmlsec1 for Windows will be handled via pip requirements

WORKDIR C:/app

COPY requirements.txt C:/app/

RUN python -m pip install --no-cache-dir -r requirements.txt

COPY . C:/app/

# Create ssl directory and generate self-signed certificates
RUN New-Item -ItemType Directory -Force -Path ssl; \
    openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost" \
    -keyout ssl/key.pem \
    -out ssl/cert.pem

# Expose port 8000
EXPOSE 8000

# Run migrations and start server
CMD ["powershell", "-c", "python manage.py migrate; python manage.py runserver_plus --cert-file=ssl/cert.pem --key-file=ssl/key.pem 0.0.0.0:8000"]