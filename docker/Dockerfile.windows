# Use Windows base image
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Use PowerShell
SHELL ["powershell", "-Command"]

# Install Chocolatey
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Install dependencies
RUN choco install -y python --version=3.9.7
RUN choco install -y openssl
RUN choco install -y 7zip

# Set Python PATH
ENV PATH="C:\\Python39;C:\\Python39\\Scripts;${PATH}"

# Set working directory
WORKDIR /app

# Copy and install requirements
COPY requirements.txt .
RUN python -m pip install --upgrade pip
RUN python -m pip install -r requirements.txt

# Install xmlsec1
RUN $url = 'https://www.zlatkovic.com/pub/libxml/64bit/xmlsec1-1.2.20-win32-x86_64.7z'; \
    $zip = 'xmlsec.7z'; \
    Invoke-WebRequest -Uri $url -OutFile $zip; \
    & 'C:\\ProgramData\\chocolatey\\bin\\7z.exe' x $zip -oC:\\xmlsec -y; \
    Remove-Item $zip

# Set xmlsec PATH
ENV PATH="C:\\xmlsec\\bin;${PATH}"
ENV XMLSEC_BINARY="C:\\xmlsec\\bin\\xmlsec1.exe"

# Copy application
COPY . .

# Generate SSL certificates
RUN New-Item -ItemType Directory -Force -Path ssl; \
    openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj '/C=US/ST=State/L=City/O=Organization/CN=localhost' \
    -keyout ssl/key.pem -out ssl/cert.pem

# Expose port
EXPOSE 8000

# Start application
CMD ["powershell", "-Command", "python manage.py migrate --noinput; python manage.py runserver_plus --cert-file=ssl/cert.pem --key-file=ssl/key.pem 0.0.0.0:8000"]