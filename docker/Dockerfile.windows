# Use a Windows base image with Python installed
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install Chocolatey and system dependencies
SHELL ["powershell", "-Command"]

# Install Chocolatey
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Install system dependencies: Python and OpenSSL
RUN choco install -y python --version=3.9.7
RUN choco install -y openssl

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt /app/
RUN python -m pip install --no-cache-dir -r requirements.txt

# Download and install xmlsec1 binaries from zlatkovic.com (official Windows binaries)
RUN $xmlsecUrl = 'https://www.zlatkovic.com/pub/libxml/64bit/xmlsec1-1.2.20-win32-x86_64.7z'; \
    $xmlsecZip = 'C:\temp\xmlsec.7z'; \
    $xmlsecDir = 'C:\xmlsec'; \
    New-Item -ItemType Directory -Force -Path C:\temp; \
    New-Item -ItemType Directory -Force -Path $xmlsecDir; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    Invoke-WebRequest -Uri $xmlsecUrl -OutFile $xmlsecZip; \
    choco install -y 7zip; \
    & "C:\Program Files\7-Zip\7z.exe" x $xmlsecZip -o"$xmlsecDir"; \
    Remove-Item $xmlsecZip

# Add xmlsec1 to PATH and set environment variable
ENV PATH="C:\xmlsec\bin;${PATH}"
ENV XMLSEC_BINARY="C:\xmlsec\bin\xmlsec1.exe"

# Copy application code
COPY . /app/

# Create ssl directory and generate self-signed certificates using OpenSSL
RUN New-Item -ItemType Directory -Force -Path ssl; \
    openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj '/C=US/ST=State/L=City/O=Organization/CN=localhost' \
    -keyout ssl/key.pem \
    -out ssl/cert.pem

# Expose port 8000
EXPOSE 8000

# Run migrations and start server
CMD ["powershell", "-Command", "python manage.py migrate; python manage.py runserver 0.0.0.0:8000 --cert-file=ssl/cert.pem --key-file=ssl/key.pem"]